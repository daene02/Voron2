#[include shell_command.cfg]
## Voron Design VORON2 250/300/350mm SKR 1.4 TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths							[mcu] section
## Thermistor types						[extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location			[homing_override] section
## Z Endstop Switch  offset for Z0		[stepper_z] section
## Probe points							[quad_gantry_level] section
## Min & Max gantry corner postions		[quad_gantry_level] section
## PID tune								[extruder] and [heater_bed] sections
## Fine tune E steps					[extruder] section

##========================== Pin Definitions ========================
## X_STEP_PIN         2.2
## X_DIR_PIN          2.6
## X_ENABLE_PIN       2.1
## X_STOP_PIN         1.29
## E0_DET_PIN         1.26
## X_UART_PIN         1.10


## Y_STEP_PIN         0.19
## Y_DIR_PIN          0.20
## Y_ENABLE_PIN       2.8
## Y_STOP_PIN         1.28
## E1_DET_PIN         1.26
## Y_UART_RX          1.9


## Z_STEP_PIN         0.22
## Z_DIR_PIN          2.11
## Z_ENABLE_PIN       0.21
## Z_STOP_PIN         1.27
## PWR_DET_PIN        1.0
## Z_UART             1.8


## E0_STEP_PIN        2.13
## E0_DIR_PIN         0.11
## E0_ENABLE_PIN      2.12
## E0_UART            1.4


## E1_STEP_PIN        1.15
## E1_DIR_PIN         1.14
## E1_ENABLE_PIN      1.16
## E1_UART_RX         1.1


## HE1                2.4    
## HE0                2.7
## BED                2.5
## TH1 (H1 Temp)      0.23
## TH0 (H0 Temp)      0.24
## TB  (Bed Temp)     0.25
## FAN                2.3
## SERVO              2.0
## PROBE			  0.10
##===================================================================
#[mcu rpi]
#serial: /tmp/klipper_host_mcu

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_110025000951333039393136-if00
canbus_uuid=6951cbb51e14                                                     
                                                     #canbus_uuid=9a44073474a6

[mcu sb2040]
                                                     #canbus_uuid=7a47c9d130cf
canbus_uuid=56789c1019b9



#[include AFC/*.cfg]
[include KAMP_Settings.cfg]
#[include K-ShakeTune/*.cfg]
#[include calibrate.cfg]
[include config_backup.cfg]
[include stealthburner_leds.cfg] 
#[include timelapse.cfg]
[include shell_command.cfg]

#=====================================================
# MANUAL SET CAPTURE TARGET
#=====================================================
[gcode_macro GPHOTO_SET_TARGET]
gcode:
    RUN_SHELL_COMMAND CMD=gphoto2_set_config

#=====================================================
# TAKE SNAPSHOT COMMAND
#=====================================================
[gcode_macro TAKE_SNAPSHOT]
description: Saves current location, moves toolhead to rear of bed, and takes a snapshot before returning.
gcode:
  {% set delayMS = 2000 %} ; Delay after moving and before taking the snapshot, deals with buffering so we don't get the print head in motion
  {% set snapshotPositionX = printer.toolhead.axis_maximum.x / 2 %} ; Middle of bed
  {% set snapshotPositionY = printer.toolhead.axis_maximum.y - 5 %} ; rear of bed w/ some buffer
  {% set currentX = printer.gcode_move.gcode_position.x %}
  {% set currentY = printer.gcode_move.gcode_position.y %}
  {% set currentZ = printer.gcode_move.gcode_position.z %} ; could be used for z-hop which we are not doing in this macro, so it's best to run this in AFTER_LAYER_CHANGE
  SAVE_GCODE_STATE NAME=take_snapshot_state

  {% if printer.extruder.can_extrude|lower == 'true' %}
    G10 ; retract
  {% endif %}
  G91 
  G0 Z5
  G90

  G0 X{snapshotPositionX} Y{snapshotPositionY} F48000.0 ;Move to snapshot position

  G4 P{delayMS} ; Dwell for delayMS seconds

  RUN_SHELL_COMMAND CMD=gphoto2_trigger_snapshot

  G0 X{currentX} Y{currentY} F48000.0 ;Return to original position
  G0 Z{currentZ}

  {% if printer.extruder.can_extrude|lower == 'true' %}
    G11 ; unretract
  {% endif %}

  RESTORE_GCODE_STATE NAME=take_snapshot_state

#=====================================================
# MANUAL SNAPSHOT TEST
#=====================================================
[gcode_macro GPHOTO_SNAPSHOT_TEST]
gcode:
    RUN_SHELL_COMMAND CMD=gphoto2_trigger_snapshot



[printer]
kinematics: corexy
max_velocity: 1000  
# max_accel: 3000    			#Max 4000
max_accel: 30000
#max_accel_to_decel: 8100
max_z_velocity: 50 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 2000
square_corner_velocity: 10.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X on mcu_xye (B Motor)
step_pin: PC14
dir_pin: PC13
enable_pin: !PE6
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc5160_stepper_x:virtual_endstop
position_min: 0
position_endstop: 350 
position_max: 350
homing_speed: 60   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_x]
cs_pin: PD6
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8 
spi_software_miso_pin: PC7
diag1_pin: ^!PC15
run_current: 2.40
sense_resistor: 0.022
driver_SGT: 1  # -64 is most sensitive value, 63 is least sensitive
driver_TBL: 1
driver_TOFF: 3
driver_DISS2G: 1
driver_DISS2VS: 1

[stepper_y]
##	Connected to Y on mcu_xye (A Motor)
step_pin: PE2
dir_pin: PE1
enable_pin: !PE0
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200  #set to 400 for 0.9 degree stepper
endstop_pin: tmc5160_stepper_y:virtual_endstop
position_min: 0
position_endstop: 350
position_max: 350
homing_speed: 60  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_y]
cs_pin: PD4
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
diag1_pin: ^!PF1
run_current: 2.40
sense_resistor: 0.022
driver_SGT: 1  # -64 is most sensitive value, 63 is least sensitive
driver_TBL: 1
driver_TOFF: 3
driver_DISS2G: 1
driver_DISS2VS: 1
 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: PG9
dir_pin: !PG10
enable_pin: !PG13
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64
#endstop_pin: z:P1.27
endstop_pin: probe:z_virtual_endstop
position_max: 270

##--------------------------------------------------------------------
position_min: -5
homing_speed: 8
homing_retract_speed: 2
second_homing_speed: 3
homing_retract_dist: 0.4

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_z]
cs_pin: PD2
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: 0.800
sense_resistor: 0.075

##	Z MCU - In Y Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: PG11
dir_pin: PD7
enable_pin: !PG12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_z1]
cs_pin: PA15
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: 0.800
sense_resistor: 0.075

##	Z MCU - In Z Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: PB4
dir_pin: !PB3
enable_pin: !PB5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_z2]
cs_pin: PA9
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: 0.800
sense_resistor: 0.075

##	Z MCU - In E0 Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: PG15
dir_pin: PB6
enable_pin: !PG14
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_z3]
cs_pin: PA10
spi_software_sclk_pin: PC6
spi_software_mosi_pin: PC8
spi_software_miso_pin: PC7
run_current: 0.800
sense_resistor: 0.075

#####################################################################
# 	Extruder
#####################################################################

#	E0 on MCU X/Y
[extruder]
step_pin: sb2040:gpio9     #!PE6
dir_pin: sb2040:gpio10    #!PA14
enable_pin: !sb2040:gpio7    #!PE0
rotation_distance: 47.088
gear_ratio: 9:1
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: sb2040:gpio6  #PA2
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PB1                                      #sb2040:gpio27 
pullup_resistor: 4700
min_temp: 10
max_temp: 280
max_power: 0.90
min_extrude_temp: 170
pressure_advance: 0.02
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 5
max_extrude_only_distance: 200

#[thermistor ATC Semitec 104NT-4-R025H42G]
#temperature1: 25
#resistance1: 100000
#temperature2: 160
#resistance2: 1074
#temperature3: 300
#resistance3: 82.78

##	E0 on MCU X/Y
##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
uart_pin: sb2040:gpio8 #PD3
interpolate: false
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - Z board, Fan Pin
heater_pin: PF5
sensor_type: Generic 3950
sensor_pin: PB0
max_power: 0.6
min_temp: 0
max_temp: 132

#####################################################################
# 	Probe
#####################################################################

[probe]
##	Inductive Probe
##	This probe is not used for Z height, only Quad Gantry Leveling
##	Z_MAX on mcu_z
##	If your probe is NO instead of NC, add change pin to !z:P0.10
pin: !sb2040:gpio28
speed: 15
samples: 3
samples_result: median
sample_retract_dist: 1.0
samples_tolerance: 0.01
samples_tolerance_retries: 20 # 5
lift_speed: 250
activate_gcode:
    {% set PROBE_TEMP = 160 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}
    
#[skew_correction]

[quad_gantry_level]
speed: 600
gantry_corners:
	-60,-10
	410,420
#	Probe points
points:
	50,25
	50,325
	300,325
	300,25
horizontal_move_z: 15
retries: 10
retry_tolerance: 0.01 # 0.0075
max_adjust: 20

[bed_mesh]
speed: 600
horizontal_move_z: 5 #  5.51
mesh_min: 25,25 # 25, 25
mesh_max: 325,325 # 275,275
fade_start: 0.6
fade_end: 10.0
probe_count: 6,6
algorithm: bicubic
   
#####################################################################
# 	Fan Control
#####################################################################

[heater_fan hotend_fan]
##	Hotend Fan - XYE board, HE1 Connector
pin: sb2040:gpio14
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 40.0

[fan]

pin: PA5
max_power: 0.6
shutdown_speed: 0.0
cycle_time: 0.005     #2 kHz PWM signal
hardware_pwm: False
kick_start_time: 0.100
off_below: 0.05
tachometer_pin: PC1
tachometer_ppr: 1


[controller_fan controllerFan0]
##	Controller fan - Z board, HE1 Connector
pin: PA3
kick_start_time: 0.5
stepper: stepper_x,stepper_y,stepper_z

[controller_fan controllerFan1]
##	Exhaust fan - Z board, HE0 Connector
pin: PA4
max_power: 1.0
stepper: stepper_x,stepper_y,stepper_z
kick_start_time: 5.0
fan_speed: 1.0

[controller_fan controllerFan2]
#	Exhaust fan - Z board, HE0 Connector
pin: PA2
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
fan_speed: 0.30

[temperature_fan RaspberryFan]
##	Exhaust fan - Z board, HE0 Connector
pin: PE8
max_power: 1.0
shutdown_speed: 0.0
cycle_time: 0.0005     #2 kHz PWM signal
hardware_pwm: False
kick_start_time: 0
sensor_type: temperature_host
min_temp: 0
max_temp: 70
target_temp: 40
max_speed: 1
min_speed: 0.4
control: pid
pid_Kp: 2.0     ;40
pid_Ki: 5.0     ;0.2
pid_Kd: 0.5     ;0.1
pid_deriv_time: 2.0
tachometer_pin: PG0
tachometer_ppr: 2

[temperature_fan MCUFan]
##	Exhaust fan - Z board, HE0 Connector
pin: PA6
max_power: 0.8
shutdown_speed: 0.0
cycle_time: 0.005     #2 kHz PWM signal
hardware_pwm: False
kick_start_time: 0.100
off_below: 0.1
sensor_type: temperature_mcu
min_temp: 0
max_temp: 70
target_temp: 40
max_speed: 1
min_speed: 0.4
control: pid
pid_Kp: 2.0     ;40
pid_Ki: 5.0     ;0.2
pid_Kd: 0.5     ;0.1
pid_deriv_time: 2.0
#tachometer_pin: PC1
#tachometer_ppr: 1

[heater_fan exhaust_fan]
pin: PA1
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0
heater: heater_bed
heater_temp: 60
fan_speed: 0

#####################################################################
# 	LED Control
#####################################################################

[output_pin caselight ]
# Chamber Lighting - Bed Connector (Optional)
pin: PA0
pwm: true
hardware_pwm: true
shutdown_value: 0
value: 50
cycle_time: 0.0037 # 0.01
scale: 100

[temperature_sensor Raspberry]
sensor_type: temperature_host

[temperature_sensor Chamber]
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC5

#####################################################################
# Acceleration sensor
#####################################################################
[adxl345]
cs_pin: sb2040:gpio1
spi_software_sclk_pin: sb2040:gpio0
spi_software_mosi_pin: sb2040:gpio3
spi_software_miso_pin: sb2040:gpio2

[resonance_tester]
accel_chip: adxl345
probe_points: 175,175,20


#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800


[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.9 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.9 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[homing_override]
axes: xyz
gcode:
     SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=True
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

    {% if home_all or 'X' in params %}
     _HOME_X
    {% endif %}
  
    {% if home_all or 'Y' in params %}
     _HOME_Y
    {% endif %}

    {% if home_all or 'Z' in params %}
    G90 
    G1 X175 Y175 F30000 
    G28 Z
    G1 Z10
    SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=homing VALUE=False
    {% endif %}

#####################################################################
# 	Macros
####################################################################

[gcode_arcs]
#resolution: 1.0

[exclude_object]

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    M117
    {% if not 'xyz' in printer.toolhead.homed_axes %}
      STATUS_HOMING
      G28
    {% endif %}

    STATUS_CLEANING
    CLEAN_NOZZLE

    STATUS_LEVELING
    QUAD_GANTRY_LEVEL

    STATUS_CLEANING
    CLEAN_NOZZLE
    
    STATUS_CALIBRATING_Z
    CALIBRATE_Z
     
    G0 X150 Y150 Z20 F30000
    STATUS_READY
    
#[gcode_macro MESH_LOAD]
#gcode:
 #   BED_MESH_PROFILE LOAD=default

[gcode_macro PRINT_START_VARS]
variable_tool: -1
gcode:

[firmware_retraction]
retract_length: 1
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 30
#   The speed of retraction, in mm/s. The default is 20 mm/s.
#unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 30
#   The speed of unretraction, in mm/s. The default is 10 mm/s

[gcode_macro START_PRINT]
gcode:
    {% set CHAMBER = params.CHAMBER|default(0)|int %}
    {% set BED = params.BED_TEMP|default(90)|int %}
    {% set EXTRUDER = params.EXTRUDER_TEMP|default(250)|int %}
    {% if not 'xyz' in printer.toolhead.homed_axes %}
     BED_MESH_CLEAR
     SKEW_PROFILE LOAD=my_skew_profile
     GET_CURRENT_SKEW
      G28
    {% endif %}

    G90
    #G0 X200 Y305 F30000
    #STATUS_HEATING
    #M140 S{BED}
    #M109 S{EXTRUDER}
   # SET_GCODE_OFFSET Z=0.0
   # M140 S{BED}
    #M117 Preheating to {EXTRUDER} / {BED} / {CHAMBER}
    #{% if printer['temperature_sensor Chamber'].temperature < params.CHAMBER|float - 1 %}
   #   M140 S90
   #   M191 S{CHAMBER|float - 1}
   # {% endif %}
   # M140 S{BED}
   # STATUS_READY
   # STATUS_CLEANING
   # CLEAN_NOZZLE
    STATUS_READY
    STATUS_HEATING
    {% if not 'xyz' in printer.toolhead.homed_axes %}
      M117 Preheating to - / {BED} / {CHAMBER}
      M104 S160
    {% else %}
      M117 Preheating to {EXTRUDER} / {BED} / {CHAMBER}
    {% endif %}
    STATUS_HEATING
    M191 S{CHAMBER}
    M140 S{BED}
    M190 S{BED}
    STATUS_READY
    #{% if not 'xyz' in printer.toolhead.homed_axes %}
    G0 X50 Y25 F30000
      M117 QGL Rehoming
      STATUS_LEVELING
      QUAD_GANTRY_LEVEL
      M117 Calibrate Z
      G28 Z
      STATUS_MESHING
      #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=True
      BTT_BED_MESH_CALIBRATE
      BED_MESH_CALIBRATE
      #SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=probing VALUE=False
      STATUS_READY
    #{% endif %}
    M117 Heating extruder to {EXTRUDER}
    M109 S{EXTRUDER}
    #STATUS_CLEANING
    #CLEAN_NOZZLE
    STATUS_READY
    M117 Printing
    VORON_PURGE
    STATUS_BUSY

[gcode_macro END_PRINT]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
   # M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-15.0 F3600                ; park filament
    G91                            ; relative positioning
    G0 Z1.00 X2.0 Y2.0 F24000    ; move nozzle to remove stringing
    M104 S0
    M140 S00
    #TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z20 F3000                   ; move nozzle up 20mm
    G90                            ; absolute positioning
    G0 X300 Y300 F36000             ; park nozzle at rear
    SET_SKEW CLEAR=1
    GET_CURRENT_SKEW
    {% if params.UNLOAD_AT_END|default(0)|int == 1 and printer["gcode_macro PRINT_START_VARS"].tool != -1 and printer["gcode_macro PRINT_START_VARS"].tool != 9 %}
      STATUS_CLEANING
     # ERCF_EJECT
    {% endif %}
    STATUS_READY

[gcode_macro CLEAN_NOZZLE]
gcode:
    {% if "xyz" in printer.toolhead.homed_axes %}
      {% if printer.extruder.temperature >= 200 %}
        M117 Cleaning nozzle
        G91
        #G0 Z10 F10000
        SAVE_GCODE_STATE NAME=clean_nozzle
          G90
          G0 X70 Y345 F10000
          SAVE_GCODE_STATE NAME=clean_nozzle_above
            G0 Z1.4 F10000
            G0 X150 F10000
            G0 Y344 X80
            G0 Y345 X150
            G0 Y349 X80
            G0 Y349 X150
            G0 Y346 X80
            G0 Y346 X150
            G0 Y345 X80
            G0 Y347 X150
            G0 Y343 X80
            G0 Y345 X150
            G0 Y345 X80
            G0 Y343 X150
            G0 Y344 X80
            G0 Y345 X150
            G0 Y349 X80
            G0 Y345 X150
          RESTORE_GCODE_STATE NAME=clean_nozzle_above MOVE=1
          M117 Cleaned!
        RESTORE_GCODE_STATE NAME=clean_nozzle MOVE=1
        G91
        G0 Z10 F10000
	G90
      {% endif %} 
    {% else %}
      { action_raise_error("Please home your axes!") }
      M117 Please home first!
    {% endif %}

[gcode_macro PRIME_NOZZLE]
gcode:
    STATUS_CLEANING
    {% set E = params.E|default(0.5) %} # retract size
    {% if not "xyz" in printer.toolhead.homed_axes %}
      { action_raise_error("Please home your axes!") }
      M117 Please home first!
    {% else %}
      {% if not printer.extruder.temperature >= 200 %}
        { action_raise_error("Heat up nozzle first!") }
        M117 Heat up nozzle first!
      {% else %}
        {% if not printer["filament_switch_sensor toolhead_sensor"].filament_detected %}
          G90
          G0 X200 Y305 F10000
          #INJECT_FILAMENT
          CLEAN_NOZZLE
          STATUS_READY
        {% endif %}
      {% endif %}
   {% endif %}

# ignore m150 commands
[gcode_macro M150]
gcode:

[gcode_macro M191]
gcode:
    {% set S = params.S|default(0) %}
    {% set R = params.R|default(120) %}
    TEMPERATURE_WAIT SENSOR="temperature_sensor Chamber" MINIMUM={S} MAXIMUM={R}

[virtual_sdcard]
path: /home/pi/printer_data/gcodes
#path: ~/gcode_files
[display_status]
[pause_resume]
recover_velocity: 300.0

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    {% if printer.pause_resume.is_paused %}
    RESPOND MSG="Print is already paused"
    {% else %}
      {% set X = params.X|default(50) %} # edit to your park position
      {% set Y = params.Y|default(348) %} # edit to your park position
      {% set Z = params.Z|default(5) %} # edit to your park position
      {% set E = params.E|default(1) %} # edit to your retract length
      SAVE_GCODE_STATE NAME=PAUSE_state
      BASE_PAUSE
      G91
      G1 E-{E} F2100
      G1 Z{Z} F6000
      SAVE_GCODE_STATE NAME=PAUSE_above_state
      G90
      G1 X{X} Y{Y} F6000
      STATUS_READY
    {% endif %}

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####
  #G91
  #CLEAN_NOZZLE
  #G92 E0
  #G0 Z{z_safe} F6000
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

  RESUME_BASE {get_params}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 340.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 3.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
  
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}

  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  80
variable_purge_distance:  40
gcode:
    {% set speed = params.SPEED|default(200) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  140
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(200) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state    

[gcode_macro SHUTDOWN]
gcode:
    RUN_SHELL_COMMAND CMD=shutdown

[idle_timeout]
gcode:
    {% if not printer.pause_resume.is_paused %}
      TURN_OFF_HEATERS
      M84
      STATUS_OFF
    {% endif %}

[exclude_object]

[gcode_macro DUMP_WARNINGS]
description: Debug: Print all warning messages from klipper
gcode:
  {% if not printer.configfile.warnings %}
    {action_respond_info("klipper too old! Please update klipper first and run again")}
  {% else %}
    {% set parameters = ["printer.configfile.warnings:"] %}
    {% for warning in printer.configfile.warnings %}
      {% set parameters = parameters.append("%s -> %s -> %s\n%s" % (warning.type, warning.section, warning.option, warning.message)) %}
    {% endfor %}
    {action_respond_info(parameters|join("\n"))}
  {% endif %}

[gcode_macro _KNOMI_STATUS]
variable_homing: False
variable_probing: False
variable_qgling: False
variable_heating_nozzle: False
variable_heating_bed: False
gcode:

[gcode_macro M109]
rename_existing: M109.1
gcode:
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=True
  M109.1 {rawparams}
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_nozzle VALUE=False

[gcode_macro M190]
rename_existing: M190.1
gcode:
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=True
  M190.1 {rawparams}
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=heating_bed VALUE=False

# For printer with QGL
[gcode_macro QUAD_GANTRY_LEVEL]
rename_existing: BTT_QUAD_GANTRY_LEVEL
gcode:
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=qgling VALUE=True
  BTT_QUAD_GANTRY_LEVEL
  SET_GCODE_VARIABLE MACRO=_KNOMI_STATUS VARIABLE=qgling VALUE=False

#[include moonraker_obico_macros.cfg]

[include AFC/*.cfg]
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# pid_kp = 40.937
#*# pid_ki = 1.414
#*# pid_kd = 296.282
#*# control = pid
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 14.545
#*# pid_ki = 0.882
#*# pid_kd = 59.999
#*#
#*# [stepper_z]
#*#
#*# [probe]
#*# z_offset = -0.7
#*#
#*# [input_shaper]
#*# shaper_type_x = 3hump_ei
#*# shaper_freq_x = 89.2
#*# shaper_type_y = mzv
#*# shaper_freq_y = 40.6
#*#
#*# [bed_mesh 20c]
#*# version = 1
#*# points =
#*# 	0.006492, 0.041492, 0.058992, 0.106492, 0.093992, 0.116492, 0.141492, 0.113992, 0.126492, 0.091492, 0.108992, 0.083992, 0.071492, 0.041492, -0.013508
#*# 	-0.028508, -0.006008, 0.033992, 0.041492, 0.086492, 0.086492, 0.093992, 0.101492, 0.076492, 0.056492, 0.056492, 0.056492, 0.031492, 0.001492, 0.006492
#*# 	-0.006008, 0.001492, 0.031492, 0.043992, 0.053992, 0.091492, 0.083992, 0.106492, 0.083992, 0.058992, 0.046492, 0.043992, 0.031492, -0.018508, -0.006008
#*# 	-0.051008, -0.011008, -0.003508, 0.058992, 0.053992, 0.053992, 0.058992, 0.046492, 0.053992, 0.051492, 0.048992, 0.031492, 0.028992, -0.008508, -0.038508
#*# 	-0.071008, -0.053508, -0.026008, 0.006492, 0.031492, 0.048992, 0.031492, 0.046492, 0.041492, 0.008992, 0.028992, -0.013508, -0.006008, -0.038508, -0.066008
#*# 	-0.098508, -0.091008, -0.061008, -0.038508, -0.021008, -0.011008, 0.023992, -0.006008, -0.013508, -0.011008, -0.021008, -0.033508, -0.066008, -0.066008, -0.071008
#*# 	-0.096008, -0.088508, -0.043508, -0.008508, -0.023508, -0.011008, -0.021008, -0.021008, -0.031008, -0.031008, -0.028508, -0.046008, -0.066008, -0.083508, -0.106008
#*# 	-0.103508, -0.068508, -0.048508, -0.028508, -0.021008, -0.008508, -0.008508, -0.023508, -0.031008, -0.043508, -0.036008, -0.041008, -0.061008, -0.108508, -0.103508
#*# 	-0.113508, -0.108508, -0.076008, -0.046008, -0.018508, -0.006008, -0.011008, -0.026008, -0.038508, -0.051008, -0.071008, -0.058508, -0.091008, -0.073508, -0.108508
#*# 	-0.106008, -0.058508, -0.048508, -0.033508, -0.016008, -0.001008, -0.016008, -0.033508, -0.023508, -0.031008, -0.036008, -0.038508, -0.036008, -0.016008, -0.048508
#*# 	-0.093508, -0.076008, -0.023508, -0.011008, -0.016008, 0.023992, 0.013992, -0.016008, -0.023508, -0.021008, -0.053508, -0.043508, -0.031008, -0.033508, -0.081008
#*# 	-0.071008, -0.033508, -0.026008, 0.006492, 0.031492, 0.043992, 0.038992, 0.051492, 0.016492, -0.013508, -0.021008, -0.028508, -0.048508, -0.061008, -0.091008
#*# 	-0.026008, -0.031008, -0.006008, 0.028992, 0.048992, 0.043992, 0.043992, 0.051492, 0.041492, 0.011492, 0.001492, 0.001492, -0.011008, -0.038508, -0.038508
#*# 	-0.016008, -0.001008, 0.046492, 0.061492, 0.116492, 0.111492, 0.081492, 0.076492, 0.056492, 0.056492, 0.051492, 0.066492, 0.018992, -0.011008, -0.028508
#*# 	0.058992, 0.061492, 0.108992, 0.136492, 0.146492, 0.156492, 0.138992, 0.128992, 0.128992, 0.106492, 0.091492, 0.096492, 0.103992, 0.056492, 0.041492
#*# min_x = 10.0
#*# max_x = 339.98
#*# min_y = 10.0
#*# max_y = 339.98
#*# x_count = 15
#*# y_count = 15
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.022500, 0.048750, 0.056875, 0.050625, 0.045625
#*# 	-0.020000, 0.033125, 0.008125, -0.006250, -0.025000
#*# 	-0.021875, 0.014375, -0.011250, -0.028750, -0.029375
#*# 	0.025000, 0.030625, 0.023750, 0.002500, -0.028750
#*# 	0.075000, 0.073750, 0.080000, 0.065625, 0.045000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 74.2485
#*# max_x = 274.2085
#*# min_y = 101.542
#*# max_y = 301.502
#*#
#*# [skew_correction my_skew_profile]
#*# xy_skew = -0.005
#*# xz_skew = 0.0
#*# yz_skew = 0.0
